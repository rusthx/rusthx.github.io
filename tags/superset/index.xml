<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Superset on rustWood</title>
        <link>https://rusthx.github.io/tags/superset/</link>
        <description>Recent content in Superset on rustWood</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>rustWood</copyright>
        <lastBuildDate>Sat, 07 Sep 2024 11:09:06 +0800</lastBuildDate><atom:link href="https://rusthx.github.io/tags/superset/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Ubuntu 22.04部署Apache Superset</title>
        <link>https://rusthx.github.io/p/ubuntu-22.04%E9%83%A8%E7%BD%B2apache-superset/</link>
        <pubDate>Sat, 07 Sep 2024 11:09:06 +0800</pubDate>
        
        <guid>https://rusthx.github.io/p/ubuntu-22.04%E9%83%A8%E7%BD%B2apache-superset/</guid>
        <description>&lt;h2 id=&#34;安装依赖&#34;&gt;安装依赖
&lt;/h2&gt;&lt;p&gt;使用以下命令安装依赖&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install build-essential libssl-dev libffi-dev python3-dev python3-pip libsasl2-dev libldap2-dev default-libmysqlclient-dev 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置superset元数据库&#34;&gt;配置Superset元数据库
&lt;/h2&gt;&lt;p&gt;本教程使用MySQL数据库作为Superset的数据库（Superset支持MySQL和PostgreSQL)，安装完成后需进行以下配置。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在MySQL中创建Superset元数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE DATABASE superset DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建Superset用户，用户名为superset,密码为superset。superset用户拥有所有数据库的全部权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create user superset@&#39;%&#39; identified WITH mysql_native_password BY &#39;superset&#39;;
grant all privileges on *.* to superset@&#39;%&#39; with grant option;
flush privileges;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;为superset创建python虚拟环境&#34;&gt;为Superset创建Python虚拟环境
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;更新pip&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pip install --upgrade pip
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;下载必要的虚拟环境包&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pip install virtualenv -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;创建虚拟环境&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;virtualenv superset
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;激活虚拟环境&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source superset/bin/activate
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;安装Superset&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install apache-superset -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;安装其他Python依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install gunicorn pymysql mysqlclient -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明：gunicorn是一个Python Web Server，可以和java中的TomCat类比&lt;/p&gt;
&lt;h2 id=&#34;配置superset&#34;&gt;配置Superset
&lt;/h2&gt;&lt;p&gt;在~/superset/bin目录下创建superset配置文件superset_config.py，详细配置可参考官方文档（&lt;a class=&#34;link&#34; href=&#34;https://superset.apache.org/docs/installation/configuring-superset/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://superset.apache.org/docs/installation/configuring-superset/&lt;/a&gt;）或者GitHub（&lt;a class=&#34;link&#34; href=&#34;https://github.com/apache/superset/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/apache/superset/&lt;/a&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Superset specific config
ROW_LIMIT = 5000

#SUPERSET_WEBSERVER_PORT = 8088

# Flask App Builder configuration
# Your App secret key will be used for securely signing the session cookie
# and encrypting sensitive information on the database
# Make sure you are changing this key for your deployment with a strong key.
# You can generate a strong key using `openssl rand -base64 42`

&#39;&#39;&#39;
使用命令“openssl rand -base64 42”创建SECRET_KEY填写到下面&#39;&#39;&#39;
SECRET_KEY = &#39;&#39;

# The SQLAlchemy connection string to your database backend
# This connection defines the path to the database that stores your
# superset metadata (slices, connections, tables, dashboards, ...).
# Note that the connection information to connect to the datasources
# you want to explore are managed directly in the web UI
&#39;&#39;&#39;
数据库连接，我是用的是MySQL数据库
链接字符串：mysql+pymysql://&amp;lt;数据库用户&amp;gt;:&amp;lt;密码&amp;gt;@&amp;lt;主机名/ip&amp;gt;/&amp;lt;数据库名&amp;gt;&#39;&#39;&#39;
SQLALCHEMY_DATABASE_URI = &#39;mysql+pymysql://superset:superset@hadoop01:3306/superset?charset=utf8&#39;
ENABLE_CSRF_PROTECTION = True
# Flask-WTF flag for CSRF

WTF_CSRF_ENABLED = True
WTF_CSRF_CHECK_DEFAULT = True
# Add endpoints that need to be exempt from CSRF protection
#WTF_CSRF_EXEMPT_LIST = []
# A CSRF token that expires in 1 year
#WTF_CSRF_TIME_LIMIT = 60 * 60 * 24 * 365

#不填这个会出现登录界面输入正确的用户名和密码后登录无反应的现象
#但是关掉这个可能会降低安全性，可能是superset版本太新（3.0.0），旧版本貌似没有这个问题
TALISMAN_ENABLED=False

# Set this API key to enable Mapbox visualizations
MAPBOX_API_KEY = &#39;&#39;

COMPRESS_REGISTER = False

#默认中文
BABEL_DEFAULT_LOCALE = &amp;quot;zh&amp;quot;
#superset支持的语言
LANGUAGES = {
    &amp;quot;en&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;us&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;English&amp;quot;},
    &amp;quot;es&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;es&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Spanish&amp;quot;},
    &amp;quot;it&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;it&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Italian&amp;quot;},
    &amp;quot;fr&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;fr&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;French&amp;quot;},
    &amp;quot;zh&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;cn&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Chinese&amp;quot;},
    &amp;quot;ja&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;jp&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Japanese&amp;quot;},
    &amp;quot;de&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;de&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;German&amp;quot;},
    &amp;quot;pt&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;pt&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Portuguese&amp;quot;},
    &amp;quot;pt_BR&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;br&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Brazilian Portuguese&amp;quot;},
    &amp;quot;ru&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;ru&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Russian&amp;quot;},
    &amp;quot;ko&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;kr&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Korean&amp;quot;},
    &amp;quot;sk&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;sk&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Slovak&amp;quot;},
    &amp;quot;sl&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;si&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Slovenian&amp;quot;},
    &amp;quot;nl&amp;quot;: {&amp;quot;flag&amp;quot;: &amp;quot;nl&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Dutch&amp;quot;},
}

SHOW_STACKTRACE = False

DEBUG = False

APP_NAME = &amp;quot;Superset&amp;quot;

#不填这个会导致报错如下
#ModuleNotFoundError: No module named &#39;MySQL_db&#39;
SQLALCHEMY_TRACK_MODIFICATIONS = False

import logging

LOG_LEVEL = &#39;DEBUG&#39;  # 设置日志级别为DEBUG可以获得最详细的日志信息
LOG_FILE = &#39;/home/rust/superset/superset_logfile.log&#39;  # 指定日志文件路径

logging.basicConfig(
    filename=LOG_FILE,
    level=LOG_LEVEL,
    format=&#39;%(asctime)s %(levelname)s %(name)s %(threadName)s : %(message)s&#39;,
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;初始化superset&#34;&gt;初始化Superset
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;初始化数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(superset) rust@hadoop01:~$ export FLASK_APP=superset
(superset) rust@hadoop01:~$ superset db upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在元数据库中创建一个superset管理员用户&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(superset) rust@hadoop01:~$ superset fab create-admin
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;初始化superset&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(superset) rust@hadoop01:~$ superset init
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;启动superset&#34;&gt;启动Superset
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; (superset) rust@hadoop01:~$gunicorn --workers 5 --timeout 120 --bind hadoop01:8787  &amp;quot;superset.app:create_app()&amp;quot; --daemon
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明：
&amp;ndash;workers：指定进程个数
&amp;ndash;timeout：worker进程超时时间，超时会自动重启
&amp;ndash;bind：绑定本机地址，即为Superset访问地址
&amp;ndash;daemon：后台运行&lt;/p&gt;
&lt;h2 id=&#34;登录supperset&#34;&gt;登录Supperset
&lt;/h2&gt;&lt;p&gt;访问&lt;a class=&#34;link&#34; href=&#34;http://hadoop102:8787&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://hadoop102:8787&lt;/a&gt;，并使用初始化Supperset中创建的管理员账户进行登录。&lt;/p&gt;
&lt;h2 id=&#34;停止superset&#34;&gt;停止Superset
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;停止gunicorn进程&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(superset) rust@hadoop01:~$ ps -ef | awk &#39;/superset/ &amp;amp;&amp;amp; !/awk/{print $2}&#39; | xargs kill -9
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;退出superset虚拟环境&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;(superset) rust@hadoop01:~$ ps -ef |grep superst
#查到进程号后杀掉进程
(superset) rust@hadoop01:~$ kill -9 pid
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;superset启停脚本&#34;&gt;Superset启停脚本
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建superset.sh文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim superset.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

superset_status(){
    result=`ps -ef | awk &#39;/gunicorn/ &amp;amp;&amp;amp; !/awk/{print $2}&#39; | wc -l`
    if [[ $result -eq 0 ]]; then
        return 0
    else
        return 1
    fi
}
superset_start(){
        source ~/.bashrc
        superset_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
        if [[ $? -eq 0 ]]; then
            source ~/superset/bin/activate ; gunicorn --workers 5 --timeout 120 --bind hadoop01:8787 --daemon &#39;superset.app:create_app()&#39;
        else
            echo &amp;quot;superset正在运行&amp;quot;
        fi

}

superset_stop(){
    superset_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
    if [[ $? -eq 0 ]]; then
        echo &amp;quot;superset未在运行&amp;quot;
    else
        ps -ef | awk &#39;/gunicorn/ &amp;amp;&amp;amp; !/awk/{print $2}&#39; | xargs kill -9
    fi
}


case $1 in
    start )
        echo &amp;quot;启动Superset&amp;quot;
        superset_start
    ;;
    stop )
        echo &amp;quot;停止Superset&amp;quot;
        superset_stop
    ;;
    restart )
        echo &amp;quot;重启Superset&amp;quot;
        superset_stop
        superset_start
    ;;
    status )
        superset_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
        if [[ $? -eq 0 ]]; then
            echo &amp;quot;superset未在运行&amp;quot;
        else
            echo &amp;quot;superset正在运行&amp;quot;
        fi
esac

&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;加执行权限&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo chmod +x superset.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#启动superset
superset.sh start
#停止superset
superset.sh stop
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
